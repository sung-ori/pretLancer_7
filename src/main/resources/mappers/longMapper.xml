<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team.pretLancer_7.dao.LongDAO">

        <select id="selectAdTranslator" resultType="MyPage">
                SELECT m.memberid as memberid, m.membername as membername
                , m.membernick as membenick, m.mem_ex as mem_ex
                , m.mem_level as mem_level,m.memberlang as memberlang
                , p.profilecomment as profilecomment, p.originphoto as originphoto
                , p.savedphoto as savedphoto
                FROM pret_member m
                INNER JOIN pret_member_profile p ON m.memberid = p.memberid
                <!--  TODO: 아직 광고 관련 속성이 없어 그냥 다 올리지만 속성 추가하고 조건도 추가해야함. -->
                WHERE m.mem_level like 'A' or m.mem_level like 'B'  AND m.ROLE_NAME = 'ROLE_TRANSLATOR'
                ORDER BY m.mem_level
        </select>
        <!-- TODO: 위 아래 if문으로 하나로 합쳐도 될 듯. -->
        <select id="selectOneMyPage" parameterType="String" resultType="MyPage">
                SELECT m.memberid as memberid, m.membername as membername
                , m.membernick as membenick, m.mem_ex as mem_ex
                , m.mem_level as mem_level,m.memberlang as memberlang
                , p.profilecomment as profilecomment, p.originphoto as originphoto
                , p.savedphoto as savedphoto
                FROM pret_member m
                INNER JOIN pret_member_profile p ON m.memberid = p.memberid
                <!--  TODO: 아직 광고 관련 속성이 없어 그냥 다 올리지만 속성 추가하고 조건도 추가해야함. -->
                WHERE m.memberid = #{memberid}
                
        </select>

        <!-- 요청을 삽입 , memberid2가 있으면 요청 / 없으면 경매 -->
        <insert id="insertOneRequst" parameterType="Request_L">
                insert into pret_request_L 
                <if test="memberid2 != null">
                        (requestnum_l, memberid, memberid2,title, category, enddate, workdate, cash, originrfile, savedrfile, comment_lr,commentpage, startlang, endlang)
                        values 
                        (PRET_REQ_L_SEQ.nextval, #{memberid}, #{memberid2}, #{title}, #{category}, #{enddate}, #{enddate}, #{cash}, #{originrfile}, #{savedrfile}, #{comment_lr},#{commentpage}, #{startlang}, #{endlang} )
                </if>
                <if test="memberid2 == null">
                        (requestnum_l, memberid, title, category, enddate, workdate, cash, originrfile, savedrfile, comment_lr,commentpage, startlang, endlang, auction)
                        values 
                        (PRET_REQ_L_SEQ.nextval, #{memberid}, #{title}, #{category}, #{enddate}, #{workdate}, #{cash}, #{originrfile}, #{savedrfile}, #{comment_lr},#{commentpage}, #{startlang}, #{endlang},'Y')
                </if>
        </insert>

        <!-- 지금 삽입한 요청 번호 -->
        <select id="selectMaxRequestnum" resultType="int">
                select max(requestnum_l) from pret_request_l
        </select>

        <!-- 옥선 테이블에 집어넣는다 -->
        <insert id="insertAuction" parameterType="int">
                insert into pret_auction (auctionnum,requestlnum)
                values (PRET_AUCTION_SEQ.nextval, #{requestnum})
        </insert>

        <!-- 경매 리스트 출력 -->
        <select id="selectAuctionList" resultType="Request_L" parameterType="Map">
                select * from pret_request_l
                where auction = 'Y' and requestcondition_l = 'N'
        
                
                <!-- <if test="type == 'all' or type == null">
                        where requestnum_l in (select requestlnum from pret_auction)
                </if>
                <if test="type == 'Y'">
                        where requestnum_l in (select requestlnum from pret_auction)
                        and catetogy = '유튜브 자막'
                </if>
                <if test="type == 'P'">
                        where requestnum_l in (select requestlnum from pret_auction)
                        and catetogy = '논문'
                </if>
                <if test="type == 'N'">
                        where requestnum_l in (select requestlnum from pret_auction)
                        and catetogy = '소설'
                </if> -->
        </select>

        <select id="selectRequestList" parameterType="String" resultType="Request_L">
                select * 
                from pret_request_l
                <if test="#{userid} != null">
                        where memberid = #{uesrid}
                        <!-- and requestnum_l not in (select requestlnum from pret_auction) -->
                </if>
        </select>

        
        <select id="selectOneRequest_L" parameterType="int" resultType="Request_L">
                select * from pret_request_l 
                where requestnum_l = #{requestnum_l}
        </select>

        <!-- 경매 고유 번호 보내서 html페이지에 박아넣음. -->
        <select id="selectAuctionNum" parameterType="int">
                select auctionnum from pret_auction
                where requestlnum = #{requestnum_l}
        </select>


        <select id="selectAuctionInfo" parameterType="int" resultType="AuctionTranslator">
                select * from PRET_AUCTIONTRANSLATER
                where auctionnum = #{auctionnum}
        </select>

        <!-- 입찰 정보를 넣는다. -->
        <insert id="insertAuctionTranslator" parameterType="AuctionTranslator">
                insert into pret_auctiontranslater
                <if test="comment != null">
                        (auctionnum, memberid, translatervalue, mem_level, comment)
                        values (#{auctionnum},#{memberid},#{translatervalue},#{mem_level},#{comment})
                </if>
                <if test="comment == null">
                        (auctionnum, memberid, translatervalue,mem_level)
                        values (#{auctionnum},#{memberid},#{translatervalue},#{mem_level})
                </if>
        </insert>
	
        <!-- 경매의 입찰 정보를가져온다. -->
        <select id="selectAuctionBid" parameterType="Map" resultType="AuctionTranslator">
                select * from PRET_AUCTIONTRANSLATER
                where auctionnum = #{auctionnum} and memberid = #{memberid}
        </select>

        

        <!-- 낙찰 -->
        <update id="updateRequestAuction" parameterType="Map">
                update pret_request_l
                set
                memberid2 = #{memberid}, cash = #{cash}, REQUESTCONDITION_L = 'T'
                where requestnum_l = #{requestnum}
        </update>
        
        <!-- 나에게 온 요청들을 출력 -->
        <select id="selectRequestToMe" parameterType="String" resultType="Request_L">
                select * from pret_request_l
                where memberid2 = #{userid}
                <!-- and  REQUESTCONDITION_L = 'N' -->
                <!-- and requestnum_l not in (select requestlnum from pret_auction) -->
        </select>
        <!-- 요청 수락 or 거절 -->
        <update id="updateRequestResponse" parameterType="Map">
                update pret_request_l
                set
                <if test="message == 'accept'">
                        requestcondition_l = 'T'
                </if>

                <if test="message == 'refuse' ">
                        memberid2 = ''
                </if>

                <if test="message == 'uploadResult' ">
                        requestcondition_l = 'E',
                        origintfile = #{originfile},
                        savedtfile = #{savedfile}
                </if>

                <if test="message == 'success'">
                        requestcondition_l = 'Y'
                </if>
                where requestnum_l = #{requestnum}
        </update>

        <!-- 지금 번역 중인지 확인 리턴 되면 지금 번역중인 거임. 널이면 번역 안하고 있음-->
        <select id="selectTranslateNow" parameterType="String">
                select * from pret_request_l
                where memberid2 = #{userid} and requestcondition_l = 'T'
        </select>

        <update id="updateCashPay" parameterType="Map">
                update pret_member
                set
                CASH = CASH - #{cash}
                where memberid = #{userid}
        </update>

        <update id="updateCashGet" parameterType="Map">
                update pret_member
                set
                cash  = cash + #{cash}
                where memberid = #{userid}
        </update>

        <update id="updatePay" parameterType="Map">
                update pret_member
                set
                <if test="message == 'pay'">

                        cash  = cash - #{cash}
                </if>
                <if test="message == 'getmoney'">
                        cash  = cash + #{cash}
                </if>
                where memberid = #{userid}
        </update>
        
        <!-- 배치 이용해서 12시마다 마감됐는지 확인하고, 그에 맞는 처리를 한다. /DB의 수정, 메세지 전송 등  -->
</mapper>
